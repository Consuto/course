=== Example - Load-Following for a Single Residence ===
As an example of how to use a battery in GridLAB-D, let's start with the model we left off with in chapter 5 on residential modeling (xxxxxxxx link) and modify it to better support distributed generation on the feeder.  Specifically, we are going to demonstrate how to use the inverter load-following mode, a mode that uses an energy storage device to peak-shave and valley-fill the load at a specified point in the distribution feeder. The resulting file is "dist_gen_load_following.glm" and the changes made were:
* Added <tt>module generators</tt> to the list of specific modules GridLAB-D needs to load as a part of running a simulation of this model.
* Install a separate triplex line and meter on <tt>b1m1</tt> so that the energy from the battery can be uniquely measured and not conflated with the load from the house.
* Install the inverter and battery on downstream of the new triplex line and meter.
* To support the <tt>LOAD_FOLLOWING</tt> mode on the inverter we need to define a node upstream of the inverter and house that will be used as a reference point. We already had a <tt>node</tt> (<tt>b1m1_house_node</tt>) and changing it to a <tt>meter</tt> will open up some measurement parameters that will be convenient to use.
* Changed the multi-recorder <tt>b1m1_house_data</tt> to measure a few of the inverter and battery parameters as well as all of the recorders to measure at 5 second increments instead of 60.

With the new objects added to the model, the only tricky part now is setting up the <tt>LOAD_FOLLOWING</tt> mode correctly in the object parameter list. <tt>LOAD_FOLLOWING</tt> works by charging when the reference load is low enough and discharging when that load is too high.  To add extra flexibility, hysteresis is included; for example, <tt>charge_on_threshold</tt> is power below which the inverter will begin to charge the battery and <tt>charge_off_threshold</tt> is the power above which the inverter will stop charging the battery. Since this is a hysteresis operation, <tt>charge_on_threshold</tt> must be lower than <tt>charge_off_threshold</tt>. A similar definition exists for the discharge operation when the load gets too high.

The power levels that the inverter will reference in making these control decisions are defined by the <tt>sense_object</tt> parameter. This object must be upstream of the inverter; that is, the power produced by the inverter must flow through this meter for <tt>LOAD_FOLLOWING</tt> to work. Lastly, a pause time in seconds between the end of the charge and discharge operation (<tt>charge_lockout_time</tt> and <tt>discharge_lockout_time </tt>, respectively) can also be defined.

Running this simulation produces a few warnings (not errors, which would halt the simulation). The first is a reminder that in <tt>LOAD_FOLLOWING</tt>, the <tt>sense_object</tt> must be upstream, as previously discussed. 

Looking at the "b1h1_house_data.csv" and comparing it to how the system behaved prior to the installation of the battery and inverter, we can see that the load-following is set-up correctly to fill the low points in the residential load and shave the peaks when that load gets too high. 

(xxxxxxxx add graph)

Except not all the time. Towards the end of the day we can see that the state-of-charge of the battery reaches zero, at which point it is no longer able to discharge, eliminating its ability to shave the peak. The battery stays in this depleted state until the load at the reference meter falls below the <tt>charge_on_threshold</tt> value of 1.5 kW, at which point the battery begins to charge, partially restoring the state of charge. Compared to where the battery started the day though, the ending state-of-charge is pretty low and its easy to see that attempts to shave the peak on the following day probably will also fall short, perhaps even earlier in the day.


=== Example - Solar PV and Battery Combination ===
Combining solar PV and energy storage can create an effective solution for regulating the load. The model defined in "dist_gen_battery_solar.glm" has such an example. To the same house that already had energy storage installed, a solar PV installation was added. As before, it is the inverter that controls the power flow from the solar panels and the control mode chosen <tt>CONSTANT_PF</tt> defaults to only producing real power, passing all the available energy generated by the solar PV installation onto the grid.

You'll also notice that the solar PV installation has its own triplex line, meter and inverter. Despite the fact that it generally possible to connect solar panels and batteries to the same inverter in real-world installations, GridLAB-D has no solver for DC powerflow and thus requires separate AC connections through inverters. This doesn't mean that the solar panels won't charge the batteries, we'll see that they do in a moment. Rather, it means that the energy flows through the AC network and as a consequence, is available for separate metering. 

Looking at the definition of the <tt>solar</tt> object, you'll see that the parameters provided are derived from a physics-level perspective. Area of solar panel installation, efficiency, panel type, panel orientation, power production models (among others), all are used to define how this installation will generate energy as the solar conditions change throughout the day (and year). This particular installation produces more than 1 kW during peak solar conditions.

Running this simulation and looking at the data in the "b1h1_house_data.csv" shows that the addition of solar greatly increases the effectively of the peak-shaving. Not only does the battery get close to full capacity before called-on mid-morning, the battery is far from empty when the end of the peak-shaving activity for the day is over, using only a third of its capacity. By having the energy storage work in parallel with the solar PV installation, the early morning solar energy production is effectively stored for use later in the day when it is needed to limit the demand of this residential load.

(xxxxxxx add graph)

If we wanted to try to align the peak of the solar generation better with the peak of the residential load we can change the orientation of the solar PV panels so that they are pointed more southwest, rather than directly south. Change the <tt>orientation_azimuth</tt> to <tt>230</tt> and re-run the simulation. You should get results something like this:

(xxxxxxx add graphs. Which ones? compare S, SW and W for solar, net battery energy, battery SOC?)
 
A few important notes from this.
* Total solar energy output - 14.1 kWh generated when facing southwest vs 14.4 kWh when facing directly south and 12.9 kWh when facing directly west.
* Total net battery energy transacted - 1.5 kWh of net load when facing southwest vs 1.9 kWh when facing directly south and 0.25 kWh when facing directly west.

As the panel points more and more westward, the total solar energy production goes down and its ability to recharge the battery is reduced. The big advantage of facing somewhat westward, though, is that it tends to line up the load on the system as air-conditioners run heavily in the late afternoon and early evening. This is particularly beneficial for residential customers that pay different rates during different times of the day but that gets into the economics of energy and that we won't get into that right now.